{"version":3,"sources":["video.show.js"],"names":[],"mappingsfile":"video.show.js","sourcesContent":["\r\nfunction scrollToTag(tag) {\r\n    $('html, body').animate({\r\n        scrollTop: $(\"#\" + tag).offset().top - 50\r\n    }, 2000);\r\n}\r\n\r\nvar subPanel = $('#subPanel');\r\nvar videoPanel = $('#videoPanel');\r\n\r\n$('img.Card-image').lazyload();\r\n\r\n$(window).resize(function () {\r\n    subPanel.height(videoPanel.height() - 52);\r\n});\r\n\r\n$(function () {\r\n    $('#tabs').tab();\r\n\r\n    $(\".heart\").on(\"click\", function () {\r\n        $(this).toggleClass(\"is-active\");\r\n    });\r\n    $(\".collect\").on(\"click\", function () {\r\n        $(this).toggleClass(\"is-active\");\r\n    });\r\n\r\n    $(\".fancy-button\").mousedown(function () {\r\n        $(this).bind('animationend webkitAnimationEnd MSAnimationEnd oAnimationEnd', function () {\r\n            $(this).removeClass('active');\r\n        });\r\n        $(this).addClass(\"active\");\r\n    });\r\n\r\n            @include('components.dict')\r\n\r\n            @if(Auth::guest())\r\n        $(\".video-content span\").click(function () {\r\n            vm.showLoginDialog();\r\n        });\r\n            @else\r\n    $(\".video-content span\").click(activePopover);\r\n            @endif\r\n    if (videoPanel.height() >= 300) {\r\n        subPanel.height(videoPanel.height() - 52);\r\n    }\r\n\r\n    $('.contenteditable').blur(function () {\r\n        var id = $(this).attr('id').substr(5);\r\n        var content = $(this).html();\r\n        vm.updateNote(id, content);\r\n    });\r\n});\r\n\r\nvar player;\r\nvar currentTime;\r\nvar noteContainer = $('#note-container');\r\nvar loginContainer = $('#login-container');\r\nvar saveNoteBtn = $('#saveNoteBtn');\r\n\r\n// 注册 partial\r\nvar vm = new Vue({\r\n    el: 'body',\r\n    data: {\r\n        points: [],\r\n        lines: [],\r\n        linesFr: [],\r\n        linesZh: [],\r\n        fr: true,\r\n        zh: true,\r\n        pointsCount: 0,\r\n        favWord: 'glyphicon-heart-empty',\r\n        played: [],    //  保存已经播放过的橘子\r\n        active: -1,\r\n        currentFr: \"@lang('labels.startToSearchWord')\",\r\n        currentZh: \"\",\r\n        favorite: '{{$like ? 'is-active' : ''}}',\r\n        isFavorite: '{{$like}}',\r\n        collect: '{{$collect ? 'is-active' : ''}}',\r\n        isCollect: '{{$collect}}',\r\n        lineActive: '',\r\n        repeatOne: -1,  //>=0 则说明循环开启\r\n        newNote: '',\r\n        notes: [],\r\n        words : [],\r\n        showNotePanel: false,\r\n        showLoginPanel: false,\r\n        originPlayerState : ''\r\n    },\r\n\r\n    ready: function () {\r\n        var pointStr = '{{$readable->points}}';\r\n        this.points = pointStr.split(',');\r\n        this.pointsCount = this.points.length;\r\n\r\n                @if($canRead)\r\n            this.linesFr = \"{!!$readable->parsed_content!!}\".split('||');\r\n        this.linesZh = \"{!!$readable->parsed_content_zh!!}\".split('||');\r\n                @endif\r\n\r\n        try {\r\n            this.notes = JSON.parse('{!! $notes !!}');\r\n            this.words = JSON.parse('{!! $words !!}');\r\n        }catch (err) {console.log('parse error')}\r\n\r\n        $('.after-loading').fadeIn();\r\n        $('.loading').hide();\r\n    },\r\n\r\n    methods: {\r\n        seekTo(no) {\r\n            var time = this.points[no];\r\n            this.seekToTime(time);\r\n        },\r\n\r\n        seekToTime(time) {\r\n            player.currentTime(time);\r\n                    @if($youtube)\r\n                player.playVideo();\r\n                    @else\r\n            player.play();\r\n                    @endif\r\n        },\r\n\r\n        favoriteEvent() {\r\n            this.$http.post('{{url(\"/\" . $type . \"s/\" . $readable->id . '/favorite')}}', function (response) {\r\n            }.bind(this));\r\n        },\r\n\r\n        collectEvent() {\r\n            this.$http.post('{{url(\"/\". $type . \"s/\" . $readable->id . '/collect')}}', function (response) {\r\n            }.bind(this));\r\n        },\r\n\r\n        punchinEvent() {\r\n            var punchin = $('#punchin');\r\n\r\n            this.$http.post('{{url(\"/\". $type . \"s/\" . $readable->id . '/punchin')}}', function (response) {\r\n                punchin.html(parseInt(punchin.html()) + 1);\r\n                var series = response.series;\r\n                var isBreakup = response.break;\r\n                if (isBreakup) {\r\n                @if(!Auth::guest())\r\n                        toastr.success(\"@lang('labels.punchinSuccess')\" + \"@lang('labels.breakup')\" + \"@lang('labels.continuePunchin', ['day' => Auth::user()->series + 1])\");\r\n                            @endif\r\n                }\r\n                $('#punchinlink').hide();\r\n            }.bind(this));\r\n        },\r\n\r\n        timeupdate() {\r\n            var currentTime = player.currentTime();\r\n            for (var i = 0; i < this.points.length; i++) {\r\n                if (this.repeatOne >= 0) {   //repeatOne is open\r\n                    if (currentTime >= this.points[this.repeatOne + 1]) {\r\n                        player.currentTime(this.points[this.repeatOne]);\r\n                    }\r\n                }\r\n                if (this.active != i && currentTime >= this.points[i]) {\r\n                    this.active = i;\r\n                    this.currentZh = this.linesZh[i];\r\n                    this.currentFr = this.linesFr[i];\r\n                }\r\n            }\r\n        },\r\n\r\n        prev() {\r\n            if (this.active - 1 >= 0) {\r\n                player.currentTime(this.points[this.active - 1]);\r\n            }\r\n        },\r\n\r\n        next() {\r\n            if (this.active + 1 < this.pointsCount) {\r\n                player.currentTime(this.points[this.active + 1]);\r\n            }\r\n        },\r\n\r\n        repeat() {\r\n            if (this.repeatOne >= 0) {\r\n                this.repeatOne = -1;\r\n            } else {\r\n                this.repeatOne = this.active;\r\n            }\r\n        },\r\n\r\n        toggleFr() {\r\n            this.fr = !this.fr;\r\n        },\r\n\r\n        toggleZh() {\r\n            this.zh = !this.zh;\r\n        },\r\n\r\n        saveNote() {\r\n            if (this.newNote.trim() == '') {\r\n                toastr.warning(\"@lang('labels.emptyContent')\");\r\n                return;\r\n            }\r\n            player.play();\r\n            saveNoteBtn.attr('disabled', 'disabled');\r\n            var note = {\r\n                id: '{{$readable->id}}',\r\n                content: this.newNote.replace('\\n', '<br/>'),\r\n                point: player.currentTime()\r\n            };\r\n\r\n            this.$http.post(\"{{url('/'. $type .'Notes')}}\", note, function (data) {\r\n                this.notes.push(note);\r\n                this.newNote = '';\r\n                toastr.success(\"@lang('labels.noteSuccess')\");\r\n                this.showNotePanel = false;\r\n                saveNoteBtn.removeAttr('disabled');\r\n            }.bind(this));\r\n        },\r\n\r\n        closeNote() {\r\n            this.newNote = '';\r\n            this.showNotePanel = false;\r\n            player.play();\r\n        },\r\n\r\n        showNoteDialog() {\r\n            player.pause();\r\n                    @if(Auth::guest())\r\n                this.showLoginDialog();\r\n                    @else\r\n            this.showNotePanel = !this.showNotePanel;\r\n                    @endif\r\n        },\r\n\r\n        closeLogin() {\r\n            this.showLoginPanel = false;\r\n        },\r\n\r\n        showLoginDialog() {\r\n            this.showLoginPanel = true;\r\n        },\r\n\r\n        updateNote(id, content) {\r\n            var note = {\r\n                id: id,\r\n                content: content\r\n            };\r\n            this.$http.put(\"{{url('notes')}}\", note, function (data) {\r\n            }.bind(this));\r\n        },\r\n\r\n        deleteNote(index, id) {\r\n            var note = {id: id};\r\n            this.notes.splice(index, 1);\r\n            this.$http.delete(\"{{url('/notes')}}\", note, function (data) {\r\n            }.bind(this));\r\n        },\r\n\r\n        deleteWord(index, id) {\r\n            var word = {id: id};\r\n            this.words.splice(index, 1);\r\n            this.$http.delete(\"{{url('/wordFavorites')}}\", word, function (data) {}.bind(this));\r\n        }\r\n    }\r\n});\r\n\r\n@if($youtube)\r\n    function onYouTubeIframeAPIReady() {\r\n        player = new YT.Player('video-placeholder', {\r\n            videoId: \"{{$readable->originSrc}}\",\r\n            playerVars: {\r\n                color: 'white',\r\n                autoplay: 1,\r\n                showinfo: 0,\r\n                rel: 0\r\n            },\r\n            events: {\r\n                onReady: initialize\r\n            }\r\n        });\r\n\r\n        function initialize() {\r\n            setInterval(vm.timeupdate, 1000);\r\n        }\r\n\r\n        player.currentTime = function (time) {\r\n            if (time == undefined || time == '') {\r\n                return player.getCurrentTime();\r\n            } else {\r\n                player.seekTo(time);\r\n            }\r\n        };\r\n\r\n        player.pause = function() {\r\n            player.pauseVideo();\r\n        };\r\n        player.play = function() {\r\n            player.playVideo();\r\n        };\r\n    }\r\n\r\n@else\r\nvideojs(\"my_video\").ready(function () {\r\n    player = this;\r\n\r\n    player.on('timeupdate', vm.timeupdate);\r\n    player.play();\r\n    $('#my_video').show();\r\n});\r\n@endif\r\n\r\n$(document).keydown(function (e) {\r\n    switch (e.which) {\r\n        case 32:    //空格，作为播放和停止的快捷键\r\n            var tag = e.target.tagName.toLowerCase();\r\n            if (tag != 'input' && tag != 'textarea' && tag != 'p') {\r\n            @if($youtube)\r\n                    if (player.getPlayerState() == 2) {\r\n                        player.playVideo();\r\n                    } else {\r\n                        player.pauseVideo();\r\n                    }\r\n                        @else\r\n                if (player.paused()) {\r\n                    player.play();\r\n                } else {\r\n                    player.pause();\r\n                }\r\n                        @endif\r\n                e.preventDefault();\r\n            }\r\n    }\r\n});"],"sourceRoot":"/source/"}