{"version":3,"sources":["dropdowns-enhancement.js","fullscreen.js","tooltip.js","googleAnalyse.js","toastr.min.js","jquery.gotop.min.js","bootstrap-markdown.js","app.js"],"names":[],"mappingslgBA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChp9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/* ========================================================================\n * Bootstrap Dropdowns Enhancement: dropdowns-enhancement.js v3.1.1 (Beta 1)\n * http://behigh.github.io/bootstrap_dropdowns_enhancement/\n * ========================================================================\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n(function($) {\n    \"use strict\";\n\n    var toggle   = '[data-toggle=\"dropdown\"]',\n        disabled = '.disabled, :disabled',\n        backdrop = '.dropdown-backdrop',\n        menuClass = 'dropdown-menu',\n        subMenuClass = 'dropdown-submenu',\n        namespace = '.bs.dropdown.data-api',\n        eventNamespace = '.bs.dropdown',\n        openClass = 'open',\n        touchSupport = 'ontouchstart' in document.documentElement,\n        opened;\n\n\n    function Dropdown(element) {\n        $(element).on('click' + eventNamespace, this.toggle)\n    }\n\n    var proto = Dropdown.prototype;\n\n    proto.toggle = function(event) {\n        var $element = $(this);\n\n        if ($element.is(disabled)) return;\n\n        var $parent = getParent($element);\n        var isActive = $parent.hasClass(openClass);\n        var isSubMenu = $parent.hasClass(subMenuClass);\n        var menuTree = isSubMenu ? getSubMenuParents($parent) : null;\n\n        closeOpened(event, menuTree);\n\n        if (!isActive) {\n            if (!menuTree)\n                menuTree = [$parent];\n\n            if (touchSupport && !$parent.closest('.navbar-nav').length && !menuTree[0].find(backdrop).length) {\n                // if mobile we use a backdrop because click events don't delegate\n                $('<div class=\"' + backdrop.substr(1) + '\"/>').appendTo(menuTree[0]).on('click', closeOpened)\n            }\n\n            for (var i = 0, s = menuTree.length; i < s; i++) {\n                if (!menuTree[i].hasClass(openClass)) {\n                    menuTree[i].addClass(openClass);\n                    positioning(menuTree[i].children('.' + menuClass), menuTree[i]);\n                }\n            }\n            opened = menuTree[0];\n        }\n\n        return false;\n    };\n\n    proto.keydown = function (e) {\n        if (!/(38|40|27)/.test(e.keyCode)) return;\n\n        var $this = $(this);\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if ($this.is('.disabled, :disabled')) return;\n\n        var $parent = getParent($this);\n        var isActive = $parent.hasClass('open');\n\n        if (!isActive || (isActive && e.keyCode == 27)) {\n            if (e.which == 27) $parent.find(toggle).trigger('focus');\n            return $this.trigger('click')\n        }\n\n        var desc = ' li:not(.divider):visible a';\n        var desc1 = 'li:not(.divider):visible > input:not(disabled) ~ label';\n        var $items = $parent.find(desc1 + ', ' + '[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc);\n\n        if (!$items.length) return;\n\n        var index = $items.index($items.filter(':focus'));\n\n        if (e.keyCode == 38 && index > 0)                 index--;                        // up\n        if (e.keyCode == 40 && index < $items.length - 1) index++;                        // down\n        if (!~index)                                      index = 0;\n\n        $items.eq(index).trigger('focus')\n    };\n\n    proto.change = function (e) {\n\n        var\n            $parent,\n            $menu,\n            $toggle,\n            selector,\n            text = '',\n            $items;\n\n        $menu = $(this).closest('.' + menuClass);\n\n        $toggle = $menu.parent().find('[data-label-placement]');\n\n        if (!$toggle || !$toggle.length) {\n            $toggle = $menu.parent().find(toggle);\n        }\n\n        if (!$toggle || !$toggle.length || $toggle.data('placeholder') === false)\n            return; // do nothing, no control\n\n        ($toggle.data('placeholder') == undefined && $toggle.data('placeholder', $.trim($toggle.text())));\n        text = $.data($toggle[0], 'placeholder');\n\n        $items = $menu.find('li > input:checked');\n\n        if ($items.length) {\n            text = [];\n            $items.each(function () {\n                var str = $(this).parent().find('label').eq(0),\n                    label = str.find('.data-label');\n\n                if (label.length) {\n                    var p = $('<p></p>');\n                    p.append(label.clone());\n                    str = p.html();\n                }\n                else {\n                    str = str.html();\n                }\n\n\n                str && text.push($.trim(str));\n            });\n\n            text = text.length < 4 ? text.join(', ') : text.length + ' selected';\n        }\n\n        var caret = $toggle.find('.caret');\n\n        $toggle.html(text || '&nbsp;');\n        if (caret.length)\n            $toggle.append(' ') && caret.appendTo($toggle);\n\n    };\n\n    function positioning($menu, $control) {\n        if ($menu.hasClass('pull-center')) {\n            $menu.css('margin-right', $menu.outerWidth() / -2);\n        }\n\n        if ($menu.hasClass('pull-middle')) {\n            $menu.css('margin-top', ($menu.outerHeight() / -2) - ($control.outerHeight() / 2));\n        }\n    }\n\n    function closeOpened(event, menuTree) {\n        if (opened) {\n\n            if (!menuTree) {\n                menuTree = [opened];\n            }\n\n            var parent;\n\n            if (opened[0] !== menuTree[0][0]) {\n                parent = opened;\n            } else {\n                parent = menuTree[menuTree.length - 1];\n                if (parent.parent().hasClass(menuClass)) {\n                    parent = parent.parent();\n                }\n            }\n\n            parent.find('.' + openClass).removeClass(openClass);\n\n            if (parent.hasClass(openClass))\n                parent.removeClass(openClass);\n\n            if (parent === opened) {\n                opened = null;\n                $(backdrop).remove();\n            }\n        }\n    }\n\n    function getSubMenuParents($submenu) {\n        var result = [$submenu];\n        var $parent;\n        while (!$parent || $parent.hasClass(subMenuClass)) {\n            $parent = ($parent || $submenu).parent();\n            if ($parent.hasClass(menuClass)) {\n                $parent = $parent.parent();\n            }\n            if ($parent.children(toggle)) {\n                result.unshift($parent);\n            }\n        }\n        return result;\n    }\n\n    function getParent($this) {\n        var selector = $this.attr('data-target');\n\n        if (!selector) {\n            selector = $this.attr('href');\n            selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, ''); //strip for ie7\n        }\n\n        var $parent = selector && $(selector);\n\n        return $parent && $parent.length ? $parent : $this.parent()\n    }\n\n    // DROPDOWN PLUGIN DEFINITION\n    // ==========================\n\n    var old = $.fn.dropdown;\n\n    $.fn.dropdown = function (option) {\n        return this.each(function () {\n            var $this = $(this);\n            var data = $this.data('bs.dropdown');\n\n            if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)));\n            if (typeof option == 'string') data[option].call($this);\n        })\n    };\n\n    $.fn.dropdown.Constructor = Dropdown;\n\n    $.fn.dropdown.clearMenus = function(e) {\n        $(backdrop).remove();\n        $('.' + openClass + ' ' + toggle).each(function () {\n            var $parent = getParent($(this));\n            var relatedTarget = { relatedTarget: this };\n            if (!$parent.hasClass('open')) return;\n            $parent.trigger(e = $.Event('hide' + eventNamespace, relatedTarget));\n            if (e.isDefaultPrevented()) return;\n            $parent.removeClass('open').trigger('hidden' + eventNamespace, relatedTarget);\n        });\n        return this;\n    };\n\n\n    // DROPDOWN NO CONFLICT\n    // ====================\n\n    $.fn.dropdown.noConflict = function () {\n        $.fn.dropdown = old;\n        return this\n    };\n\n\n    $(document).off(namespace)\n        .on('click' + namespace, closeOpened)\n        .on('click' + namespace, toggle, proto.toggle)\n        .on('click' + namespace, '.dropdown-menu > li > input[type=\"checkbox\"] ~ label, .dropdown-menu > li > input[type=\"checkbox\"], .dropdown-menu.noclose > li', function (e) {\n            e.stopPropagation()\n        })\n        .on('change' + namespace, '.dropdown-menu > li > input[type=\"checkbox\"], .dropdown-menu > li > input[type=\"radio\"]', proto.change)\n        .on('keydown' + namespace, toggle + ', [role=\"menu\"], [role=\"listbox\"]', proto.keydown)\n}(jQuery));","$(document).ready(function () {\r\n    fullscreenSupport();\r\n});\r\n\r\n$(window).resize(function () {\r\n    fullscreenSupport();\r\n});\r\n\r\nvar fullscreenSupport = function () {\r\n    var height = $(window).height();\r\n    var width = $(window).width();\r\n    $(\".fullscreen\").css('min-height', height);\r\n};","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.6\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.6'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\r\n\r\nga('create', 'UA-79348501-1', 'auto');\r\nga('send', 'pageview');","!function(e){e([\"jquery\"],function(e){return function(){function t(e,t,n){return f({type:O.error,iconClass:g().iconClasses.error,message:e,optionsOverride:n,title:t})}function n(t,n){return t||(t=g()),v=e(\"#\"+t.containerId),v.length?v:(n&&(v=c(t)),v)}function i(e,t,n){return f({type:O.info,iconClass:g().iconClasses.info,message:e,optionsOverride:n,title:t})}function o(e){w=e}function s(e,t,n){return f({type:O.success,iconClass:g().iconClasses.success,message:e,optionsOverride:n,title:t})}function a(e,t,n){return f({type:O.warning,iconClass:g().iconClasses.warning,message:e,optionsOverride:n,title:t})}function r(e){var t=g();v||n(t),l(e,t)||u(t)}function d(t){var i=g();return v||n(i),t&&0===e(\":focus\",t).length?void h(t):void(v.children().length&&v.remove())}function u(t){for(var n=v.children(),i=n.length-1;i>=0;i--)l(e(n[i]),t)}function l(t,n){return t&&0===e(\":focus\",t).length?(t[n.hideMethod]({duration:n.hideDuration,easing:n.hideEasing,complete:function(){h(t)}}),!0):!1}function c(t){return v=e(\"<div/>\").attr(\"id\",t.containerId).addClass(t.positionClass).attr(\"aria-live\",\"polite\").attr(\"role\",\"alert\"),v.appendTo(e(t.target)),v}function p(){return{tapToDismiss:!0,toastClass:\"toast\",containerId:\"toast-container\",debug:!1,showMethod:\"fadeIn\",showDuration:300,showEasing:\"swing\",onShown:void 0,hideMethod:\"fadeOut\",hideDuration:1e3,hideEasing:\"swing\",onHidden:void 0,extendedTimeOut:1e3,iconClasses:{error:\"toast-error\",info:\"toast-info\",success:\"toast-success\",warning:\"toast-warning\"},iconClass:\"toast-info\",positionClass:\"toast-top-right\",timeOut:5e3,titleClass:\"toast-title\",messageClass:\"toast-message\",target:\"body\",closeHtml:'<button type=\"button\">&times;</button>',newestOnTop:!0,preventDuplicates:!1,progressBar:!1}}function m(e){w&&w(e)}function f(t){function i(t){return!e(\":focus\",l).length||t?(clearTimeout(O.intervalId),l[r.hideMethod]({duration:r.hideDuration,easing:r.hideEasing,complete:function(){h(l),r.onHidden&&\"hidden\"!==b.state&&r.onHidden(),b.state=\"hidden\",b.endTime=new Date,m(b)}})):void 0}function o(){(r.timeOut>0||r.extendedTimeOut>0)&&(u=setTimeout(i,r.extendedTimeOut),O.maxHideTime=parseFloat(r.extendedTimeOut),O.hideEta=(new Date).getTime()+O.maxHideTime)}function s(){clearTimeout(u),O.hideEta=0,l.stop(!0,!0)[r.showMethod]({duration:r.showDuration,easing:r.showEasing})}function a(){var e=(O.hideEta-(new Date).getTime())/O.maxHideTime*100;f.width(e+\"%\")}var r=g(),d=t.iconClass||r.iconClass;if(\"undefined\"!=typeof t.optionsOverride&&(r=e.extend(r,t.optionsOverride),d=t.optionsOverride.iconClass||d),r.preventDuplicates){if(t.message===C)return;C=t.message}T++,v=n(r,!0);var u=null,l=e(\"<div/>\"),c=e(\"<div/>\"),p=e(\"<div/>\"),f=e(\"<div/>\"),w=e(r.closeHtml),O={intervalId:null,hideEta:null,maxHideTime:null},b={toastId:T,state:\"visible\",startTime:new Date,options:r,map:t};return t.iconClass&&l.addClass(r.toastClass).addClass(d),t.title&&(c.append(t.title).addClass(r.titleClass),l.append(c)),t.message&&(p.append(t.message).addClass(r.messageClass),l.append(p)),r.closeButton&&(w.addClass(\"toast-close-button\").attr(\"role\",\"button\"),l.prepend(w)),r.progressBar&&(f.addClass(\"toast-progress\"),l.prepend(f)),l.hide(),r.newestOnTop?v.prepend(l):v.append(l),l[r.showMethod]({duration:r.showDuration,easing:r.showEasing,complete:r.onShown}),r.timeOut>0&&(u=setTimeout(i,r.timeOut),O.maxHideTime=parseFloat(r.timeOut),O.hideEta=(new Date).getTime()+O.maxHideTime,r.progressBar&&(O.intervalId=setInterval(a,10))),l.hover(s,o),!r.onclick&&r.tapToDismiss&&l.click(i),r.closeButton&&w&&w.click(function(e){e.stopPropagation?e.stopPropagation():void 0!==e.cancelBubble&&e.cancelBubble!==!0&&(e.cancelBubble=!0),i(!0)}),r.onclick&&l.click(function(){r.onclick(),i()}),m(b),r.debug&&console&&console.log(b),l}function g(){return e.extend({},p(),b.options)}function h(e){v||(v=n()),e.is(\":visible\")||(e.remove(),e=null,0===v.children().length&&(v.remove(),C=void 0))}var v,w,C,T=0,O={error:\"error\",info:\"info\",success:\"success\",warning:\"warning\"},b={clear:r,remove:d,error:t,getContainer:n,info:i,options:{},subscribe:o,success:s,version:\"2.1.0\",warning:a};return b}()})}(\"function\"==typeof define&&define.amd?define:function(e,t){\"undefined\"!=typeof module&&module.exports?module.exports=t(require(\"jquery\")):window.toastr=t(window.jQuery)});\r\n//# sourceMappingURL=toastr.js.map","/*!\n * jQuery goTop v1.1.2 (https://github.com/scottdorman/jquery-gotop)\n * Copyright 2015 Scott Dorman (@sdorman)\n * Licensed under MIT (https://github.com/scottdorman/jquery-gotop/blob/master/LICENSE)\n * Adapted from goUp originally developed by Roger Vila (@_rogervila)\n */\n(function ($) {\n    $.fn.goTop = function (options) {\n\n        $.fn.goTop.defaults = {\n            appear: 200,\n            scrolltime: 800,\n            src: \"glyphicon glyphicon-chevron-up\",\n            width: 45,\n            place: \"right\",\n            fadein: 500,\n            fadeout: 500,\n            opacity: 0.5,\n            marginX: 2,\n            marginY: 2\n        };\n\n        var opts = $.extend({}, $.fn.goTop.defaults, options);\n\n        return this.each(function () {\n            var g = $(this);\n            g.html(\"<a id='goTopAnchor'><span id='goTopSpan' /></a>\");\n\n            var ga = g.children('a');\n            var gs = ga.children('span');\n\n            var css = {\n                \"position\": \"fixed\",\n                \"display\": \"block\",\n                \"width\": \"'\" + opts.width + \"px'\",\n                \"z-index\": \"9\",\n                \"bottom\": opts.marginY + \"%\"\n            };\n\n            css[opts.place === \"left\" ? \"left\" : \"right\"] = opts.marginX + \"%\";\n\n            g.css(css);\n\n            //opacity\n            ga.css(\"opacity\", opts.opacity);\n            gs.addClass(opts.src);\n            gs.css(\"font-size\", opts.width);\n            gs.hide();\n\n            //appear, fadein, fadeout\n            $(function () {\n                $(window).scroll(function () {\n                    if ($(this).scrollTop() > opts.appear) {\n                        gs.fadeIn(opts.fadein);\n                    }\n                    else {\n                        gs.fadeOut(opts.fadeout);\n                    }\n                });\n\n                //hover effect\n                $(ga).hover(function () {\n                    $(this).css(\"opacity\", \"1.0\");\n                    $(this).css(\"cursor\", \"pointer\");\n                    $(this).css(\"color\", \"#273041\")\n                }, function () {\n                    $(this).css(\"opacity\", opts.opacity);\n                });\n\n                //scrolltime\n                $(ga).click(function () {\n                    $('body,html').animate({\n                        scrollTop: 0\n                    }, opts.scrolltime);\n                    return false;\n                });\n            });\n        });\n    };\n})(jQuery);\n","/* ===================================================\n * bootstrap-markdown.js v2.10.0\n * http://github.com/toopay/bootstrap-markdown\n * ===================================================\n * Copyright 2013-2016 Taufan Aditya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n(function(factory) {\n  if (typeof define === \"function\" && define.amd) {\n    //RequireJS\n    define([\"jquery\"], factory);\n  } else if (typeof exports === 'object') {\n    //Backbone.js\n    factory(require('jquery'));\n  } else {\n    //Jquery plugin\n    factory(jQuery);\n  }\n}(function($) {\n  \"use strict\";\n\n  /* MARKDOWN CLASS DEFINITION\n   * ========================== */\n\n  var Markdown = function(element, options) {\n    // @TODO : remove this BC on next major release\n    // @see : https://github.com/toopay/bootstrap-markdown/issues/109\n    var opts = ['autofocus', 'savable', 'hideable', 'width',\n      'height', 'resize', 'iconlibrary', 'language',\n      'footer', 'fullscreen', 'hiddenButtons', 'disabledButtons'\n    ];\n    $.each(opts, function(_, opt) {\n      if (typeof $(element).data(opt) !== 'undefined') {\n        options = typeof options == 'object' ? options : {};\n        options[opt] = $(element).data(opt);\n      }\n    });\n    // End BC\n\n    // Class Properties\n    this.$ns = 'bootstrap-markdown';\n    this.$element = $(element);\n    this.$editable = {\n      el: null,\n      type: null,\n      attrKeys: [],\n      attrValues: [],\n      content: null\n    };\n    this.$options = $.extend(true, {}, $.fn.markdown.defaults, options, this.$element.data('options'));\n    this.$oldContent = null;\n    this.$isPreview = false;\n    this.$isFullscreen = false;\n    this.$editor = null;\n    this.$textarea = null;\n    this.$handler = [];\n    this.$callback = [];\n    this.$nextTab = [];\n\n    this.showEditor();\n  };\n\n  Markdown.prototype = {\n\n    constructor: Markdown,\n    __alterButtons: function(name, alter) {\n      var handler = this.$handler,\n        isAll = (name == 'all'),\n        that = this;\n\n      $.each(handler, function(k, v) {\n        var halt = true;\n        if (isAll) {\n          halt = false;\n        } else {\n          halt = v.indexOf(name) < 0;\n        }\n\n        if (halt === false) {\n          alter(that.$editor.find('button[data-handler=\"' + v + '\"]'));\n        }\n      });\n    },\n    __buildButtons: function(buttonsArray, container) {\n      var i,\n        ns = this.$ns,\n        handler = this.$handler,\n        callback = this.$callback;\n\n      for (i = 0; i < buttonsArray.length; i++) {\n        // Build each group container\n        var y, btnGroups = buttonsArray[i];\n        for (y = 0; y < btnGroups.length; y++) {\n          // Build each button group\n          var z,\n            buttons = btnGroups[y].data,\n            btnGroupContainer = $('<div/>', {\n              'class': 'btn-group'\n            });\n\n          for (z = 0; z < buttons.length; z++) {\n            var button = buttons[z],\n              buttonContainer, buttonIconContainer,\n              buttonHandler = ns + '-' + button.name,\n              buttonIcon = this.__getIcon(button.icon),\n              btnText = button.btnText ? button.btnText : '',\n              btnClass = button.btnClass ? button.btnClass : 'btn',\n              tabIndex = button.tabIndex ? button.tabIndex : '-1',\n              hotkey = typeof button.hotkey !== 'undefined' ? button.hotkey : '',\n              hotkeyCaption = typeof jQuery.hotkeys !== 'undefined' && hotkey !== '' ? ' (' + hotkey + ')' : '';\n\n            // Construct the button object\n            buttonContainer = $('<button></button>');\n            buttonContainer.text(' ' + this.__localize(btnText)).addClass('btn-default btn-sm').addClass(btnClass);\n            if (btnClass.match(/btn\\-(primary|success|info|warning|danger|link)/)) {\n              buttonContainer.removeClass('btn-default');\n            }\n            buttonContainer.attr({\n              'type': 'button',\n              'title': this.__localize(button.title) + hotkeyCaption,\n              'tabindex': tabIndex,\n              'data-provider': ns,\n              'data-handler': buttonHandler,\n              'data-hotkey': hotkey\n            });\n            if (button.toggle === true) {\n              buttonContainer.attr('data-toggle', 'button');\n            }\n            buttonIconContainer = $('<span/>');\n            buttonIconContainer.addClass(buttonIcon);\n            buttonIconContainer.prependTo(buttonContainer);\n\n            // Attach the button object\n            btnGroupContainer.append(buttonContainer);\n\n            // Register handler and callback\n            handler.push(buttonHandler);\n            callback.push(button.callback);\n          }\n\n          // Attach the button group into container dom\n          container.append(btnGroupContainer);\n        }\n      }\n\n      return container;\n    },\n    __setListener: function() {\n      // Set size and resizable Properties\n      var hasRows = typeof this.$textarea.attr('rows') !== 'undefined',\n        maxRows = this.$textarea.val().split(\"\\n\").length > 5 ? this.$textarea.val().split(\"\\n\").length : '5',\n        rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows;\n\n      this.$textarea.attr('rows', rowsVal);\n      if (this.$options.resize) {\n        this.$textarea.css('resize', this.$options.resize);\n      }\n\n      this.$textarea.on({\n        'focus': $.proxy(this.focus, this),\n        'keyup': $.proxy(this.keyup, this),\n        'change': $.proxy(this.change, this),\n        'select': $.proxy(this.select, this)\n      });\n\n      if (this.eventSupported('keydown')) {\n        this.$textarea.on('keydown', $.proxy(this.keydown, this));\n      }\n\n      if (this.eventSupported('keypress')) {\n        this.$textarea.on('keypress', $.proxy(this.keypress, this));\n      }\n\n      // Re-attach markdown data\n      this.$textarea.data('markdown', this);\n    },\n    __handle: function(e) {\n      var target = $(e.currentTarget),\n        handler = this.$handler,\n        callback = this.$callback,\n        handlerName = target.attr('data-handler'),\n        callbackIndex = handler.indexOf(handlerName),\n        callbackHandler = callback[callbackIndex];\n\n      // Trigger the focusin\n      $(e.currentTarget).focus();\n\n      callbackHandler(this);\n\n      // Trigger onChange for each button handle\n      this.change(this);\n\n      // Unless it was the save handler,\n      // focusin the textarea\n      if (handlerName.indexOf('cmdSave') < 0) {\n        this.$textarea.focus();\n      }\n\n      e.preventDefault();\n    },\n    __localize: function(string) {\n      var messages = $.fn.markdown.messages,\n        language = this.$options.language;\n      if (\n        typeof messages !== 'undefined' &&\n        typeof messages[language] !== 'undefined' &&\n        typeof messages[language][string] !== 'undefined'\n      ) {\n        return messages[language][string];\n      }\n      return string;\n    },\n    __getIcon: function(src) {\n      return typeof src == 'object' ? src[this.$options.iconlibrary] : src;\n    },\n    setFullscreen: function(mode) {\n      var $editor = this.$editor,\n        $textarea = this.$textarea;\n\n      if (mode === true) {\n        $editor.addClass('md-fullscreen-mode');\n        $('body').addClass('md-nooverflow');\n        this.$options.onFullscreen(this);\n      } else {\n        $editor.removeClass('md-fullscreen-mode');\n        $('body').removeClass('md-nooverflow');\n        this.$options.onFullscreenExit(this);\n\n        if (this.$isPreview === true)\n          this.hidePreview().showPreview();\n      }\n\n      this.$isFullscreen = mode;\n      $textarea.focus();\n    },\n    showEditor: function() {\n      var instance = this,\n        textarea,\n        ns = this.$ns,\n        container = this.$element,\n        originalHeigth = container.css('height'),\n        originalWidth = container.css('width'),\n        editable = this.$editable,\n        handler = this.$handler,\n        callback = this.$callback,\n        options = this.$options,\n        editor = $('<div/>', {\n          'class': 'md-editor',\n          click: function() {\n            instance.focus();\n          }\n        });\n\n      // Prepare the editor\n      if (this.$editor === null) {\n        // Create the panel\n        var editorHeader = $('<div/>', {\n          'class': 'md-header btn-toolbar'\n        });\n\n        // Merge the main & additional button groups together\n        var allBtnGroups = [];\n        if (options.buttons.length > 0) allBtnGroups = allBtnGroups.concat(options.buttons[0]);\n        if (options.additionalButtons.length > 0) {\n          // iterate the additional button groups\n          $.each(options.additionalButtons[0], function(idx, buttonGroup) {\n\n            // see if the group name of the addional group matches an existing group\n            var matchingGroups = $.grep(allBtnGroups, function(allButtonGroup, allIdx) {\n              return allButtonGroup.name === buttonGroup.name;\n            });\n\n            // if it matches add the addional buttons to that group, if not just add it to the all buttons group\n            if (matchingGroups.length > 0) {\n              matchingGroups[0].data = matchingGroups[0].data.concat(buttonGroup.data);\n            } else {\n              allBtnGroups.push(options.additionalButtons[0][idx]);\n            }\n\n          });\n        }\n\n        // Reduce and/or reorder the button groups\n        if (options.reorderButtonGroups.length > 0) {\n          allBtnGroups = allBtnGroups\n            .filter(function(btnGroup) {\n              return options.reorderButtonGroups.indexOf(btnGroup.name) > -1;\n            })\n            .sort(function(a, b) {\n              if (options.reorderButtonGroups.indexOf(a.name) < options.reorderButtonGroups.indexOf(b.name)) return -1;\n              if (options.reorderButtonGroups.indexOf(a.name) > options.reorderButtonGroups.indexOf(b.name)) return 1;\n              return 0;\n            });\n        }\n\n        // Build the buttons\n        if (allBtnGroups.length > 0) {\n          editorHeader = this.__buildButtons([allBtnGroups], editorHeader);\n        }\n\n        if (options.fullscreen.enable) {\n          editorHeader.append('<div class=\"md-controls\"><a class=\"md-control md-control-fullscreen\" href=\"#\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOn) + '\"></span></a></div>').on('click', '.md-control-fullscreen', function(e) {\n            e.preventDefault();\n            instance.setFullscreen(true);\n          });\n        }\n\n        editor.append(editorHeader);\n\n        // Wrap the textarea\n        if (container.is('textarea')) {\n          container.before(editor);\n          textarea = container;\n          textarea.addClass('md-input');\n          editor.append(textarea);\n        } else {\n          var rawContent = (typeof toMarkdown == 'function') ? toMarkdown(container.html()) : container.html(),\n            currentContent = $.trim(rawContent);\n\n          // This is some arbitrary content that could be edited\n          textarea = $('<textarea/>', {\n            'class': 'md-input',\n            'val': currentContent\n          });\n\n          editor.append(textarea);\n\n          // Save the editable\n          editable.el = container;\n          editable.type = container.prop('tagName').toLowerCase();\n          editable.content = container.html();\n\n          $(container[0].attributes).each(function() {\n            editable.attrKeys.push(this.nodeName);\n            editable.attrValues.push(this.nodeValue);\n          });\n\n          // Set editor to blocked the original container\n          container.replaceWith(editor);\n        }\n\n        var editorFooter = $('<div/>', {\n            'class': 'md-footer'\n          }),\n          createFooter = false,\n          footer = '';\n        // Create the footer if savable\n        if (options.savable) {\n          createFooter = true;\n          var saveHandler = 'cmdSave';\n\n          // Register handler and callback\n          handler.push(saveHandler);\n          callback.push(options.onSave);\n\n          editorFooter.append('<button class=\"btn btn-success\" data-provider=\"' +\n            ns +\n            '\" data-handler=\"' +\n            saveHandler +\n            '\"><i class=\"icon icon-white icon-ok\"></i> ' +\n            this.__localize('Save') +\n            '</button>');\n\n\n        }\n\n        footer = typeof options.footer === 'function' ? options.footer(this) : options.footer;\n\n        if ($.trim(footer) !== '') {\n          createFooter = true;\n          editorFooter.append(footer);\n        }\n\n        if (createFooter) editor.append(editorFooter);\n\n        // Set width\n        if (options.width && options.width !== 'inherit') {\n          if (jQuery.isNumeric(options.width)) {\n            editor.css('display', 'table');\n            textarea.css('width', options.width + 'px');\n          } else {\n            editor.addClass(options.width);\n          }\n        }\n\n        // Set height\n        if (options.height && options.height !== 'inherit') {\n          if (jQuery.isNumeric(options.height)) {\n            var height = options.height;\n            if (editorHeader) height = Math.max(0, height - editorHeader.outerHeight());\n            if (editorFooter) height = Math.max(0, height - editorFooter.outerHeight());\n            textarea.css('height', height + 'px');\n          } else {\n            editor.addClass(options.height);\n          }\n        }\n\n        // Reference\n        this.$editor = editor;\n        this.$textarea = textarea;\n        this.$editable = editable;\n        this.$oldContent = this.getContent();\n\n        this.__setListener();\n\n        // Set editor attributes, data short-hand API and listener\n        this.$editor.attr('id', (new Date()).getTime());\n        this.$editor.on('click', '[data-provider=\"bootstrap-markdown\"]', $.proxy(this.__handle, this));\n\n        if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\n          this.$editor.addClass('md-editor-disabled');\n          this.disableButtons('all');\n        }\n\n        if (this.eventSupported('keydown') && typeof jQuery.hotkeys === 'object') {\n          editorHeader.find('[data-provider=\"bootstrap-markdown\"]').each(function() {\n            var $button = $(this),\n              hotkey = $button.attr('data-hotkey');\n            if (hotkey.toLowerCase() !== '') {\n              textarea.bind('keydown', hotkey, function() {\n                $button.trigger('click');\n                return false;\n              });\n            }\n          });\n        }\n\n        if (options.initialstate === 'preview') {\n          this.showPreview();\n        } else if (options.initialstate === 'fullscreen' && options.fullscreen.enable) {\n          this.setFullscreen(true);\n        }\n\n      } else {\n        this.$editor.show();\n      }\n\n      if (options.autofocus) {\n        this.$textarea.focus();\n        this.$editor.addClass('active');\n      }\n\n      if (options.fullscreen.enable && options.fullscreen !== false) {\n        this.$editor.append('<div class=\"md-fullscreen-controls\">' +\n          '<a href=\"#\" class=\"exit-fullscreen\" title=\"Exit fullscreen\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOff) + '\">' +\n          '</span></a>' +\n          '</div>');\n        this.$editor.on('click', '.exit-fullscreen', function(e) {\n          e.preventDefault();\n          instance.setFullscreen(false);\n        });\n      }\n\n      // hide hidden buttons from options\n      this.hideButtons(options.hiddenButtons);\n\n      // disable disabled buttons from options\n      this.disableButtons(options.disabledButtons);\n\n      // enable dropZone if available and configured\n      if (options.dropZoneOptions) {\n        if (this.$editor.dropzone) {\n          if(!options.dropZoneOptions.init) {\n            options.dropZoneOptions.init = function() {\n              var caretPos = 0;\n              this.on('drop', function(e) {\n                  caretPos = textarea.prop('selectionStart');\n                  });\n              this.on('success', function(file, path) {\n                  var text = textarea.val();\n                  textarea.val(text.substring(0, caretPos) + '\\n![description](' + path + ')\\n' + text.substring(caretPos));\n                  });\n              this.on('error', function(file, error, xhr) {\n                  console.log('Error:', error);\n                  });\n            };\n          }\n          this.$textarea.addClass('dropzone');\n          this.$editor.dropzone(options.dropZoneOptions);\n        } else {\n          console.log('dropZoneOptions was configured, but DropZone was not detected.');\n        }\n      }\n\n      // enable data-uris via drag and drop\n      if (options.enableDropDataUri === true) {\n        this.$editor.on('drop', function(e) {\n          var caretPos = textarea.prop('selectionStart');\n          e.stopPropagation();\n          e.preventDefault();\n          $.each(e.originalEvent.dataTransfer.files, function(index, file){\n            var fileReader = new FileReader();\n              fileReader.onload = (function(file) {\n                 return function(e) {\n                    var text = textarea.val();\n                    textarea.val(text.substring(0, caretPos) + '\\n<img src=\"'+ e.target.result  +'\" />\\n' + text.substring(caretPos) );\n                 };\n              })(file);\n            fileReader.readAsDataURL(file);\n          });\n        });\n      }\n\n      // Trigger the onShow hook\n      options.onShow(this);\n\n      return this;\n    },\n    parseContent: function(val) {\n      var content;\n\n      // parse with supported markdown parser\n      val = val || this.$textarea.val();\n\n      if (this.$options.parser) {\n        content = this.$options.parser(val);\n      } else if (typeof markdown == 'object') {\n        content = markdown.toHTML(val);\n      } else if (typeof marked == 'function') {\n        content = marked(val);\n      } else {\n        content = val;\n      }\n\n      return content;\n    },\n    showPreview: function() {\n      var options = this.$options,\n        container = this.$textarea,\n        afterContainer = container.next(),\n        replacementContainer = $('<div/>', {\n          'class': 'md-preview',\n          'data-provider': 'markdown-preview'\n        }),\n        content,\n        callbackContent;\n\n      if (this.$isPreview === true) {\n        // Avoid sequenced element creation on missused scenario\n        // @see https://github.com/toopay/bootstrap-markdown/issues/170\n        return this;\n      }\n\n      // Give flag that tell the editor enter preview mode\n      this.$isPreview = true;\n      // Disable all buttons\n      this.disableButtons('all').enableButtons('cmdPreview');\n\n      // Try to get the content from callback\n      callbackContent = options.onPreview(this);\n      // Set the content based from the callback content if string otherwise parse value from textarea\n      content = typeof callbackContent == 'string' ? callbackContent : this.parseContent();\n\n      // Build preview element\n      replacementContainer.html(content);\n\n      if (afterContainer && afterContainer.attr('class') == 'md-footer') {\n        // If there is footer element, insert the preview container before it\n        replacementContainer.insertBefore(afterContainer);\n      } else {\n        // Otherwise, just append it after textarea\n        container.parent().append(replacementContainer);\n      }\n\n      // Set the preview element dimensions\n      replacementContainer.css({\n        width: container.outerWidth() + 'px',\n        height: container.outerHeight() + 'px'\n      });\n\n      if (this.$options.resize) {\n        replacementContainer.css('resize', this.$options.resize);\n      }\n\n      // Hide the last-active textarea\n      container.hide();\n\n      // Attach the editor instances\n      replacementContainer.data('markdown', this);\n\n      if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\n        this.$editor.addClass('md-editor-disabled');\n        this.disableButtons('all');\n      }\n\n      return this;\n    },\n    hidePreview: function() {\n      // Give flag that tell the editor quit preview mode\n      this.$isPreview = false;\n\n      // Obtain the preview container\n      var container = this.$editor.find('div[data-provider=\"markdown-preview\"]');\n\n      // Remove the preview container\n      container.remove();\n\n      // Enable all buttons\n      this.enableButtons('all');\n      // Disable configured disabled buttons\n      this.disableButtons(this.$options.disabledButtons);\n\n      // Back to the editor\n      this.$textarea.show();\n      this.__setListener();\n\n      return this;\n    },\n    isDirty: function() {\n      return this.$oldContent != this.getContent();\n    },\n    getContent: function() {\n      return this.$textarea.val();\n    },\n    setContent: function(content) {\n      this.$textarea.val(content);\n\n      return this;\n    },\n    findSelection: function(chunk) {\n      var content = this.getContent(),\n        startChunkPosition;\n\n      if (startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {\n        var oldSelection = this.getSelection(),\n          selection;\n\n        this.setSelection(startChunkPosition, startChunkPosition + chunk.length);\n        selection = this.getSelection();\n\n        this.setSelection(oldSelection.start, oldSelection.end);\n\n        return selection;\n      } else {\n        return null;\n      }\n    },\n    getSelection: function() {\n\n      var e = this.$textarea[0];\n\n      return (\n\n        ('selectionStart' in e && function() {\n          var l = e.selectionEnd - e.selectionStart;\n          return {\n            start: e.selectionStart,\n            end: e.selectionEnd,\n            length: l,\n            text: e.value.substr(e.selectionStart, l)\n          };\n        }) ||\n\n        /* browser not supported */\n        function() {\n          return null;\n        }\n\n      )();\n\n    },\n    setSelection: function(start, end) {\n\n      var e = this.$textarea[0];\n\n      return (\n\n        ('selectionStart' in e && function() {\n          e.selectionStart = start;\n          e.selectionEnd = end;\n          return;\n        }) ||\n\n        /* browser not supported */\n        function() {\n          return null;\n        }\n\n      )();\n\n    },\n    replaceSelection: function(text) {\n\n      var e = this.$textarea[0];\n\n      return (\n\n        ('selectionStart' in e && function() {\n          e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length);\n          // Set cursor to the last replacement end\n          e.selectionStart = e.value.length;\n          return this;\n        }) ||\n\n        /* browser not supported */\n        function() {\n          e.value += text;\n          return jQuery(e);\n        }\n\n      )();\n    },\n    getNextTab: function() {\n      // Shift the nextTab\n      if (this.$nextTab.length === 0) {\n        return null;\n      } else {\n        var nextTab, tab = this.$nextTab.shift();\n\n        if (typeof tab == 'function') {\n          nextTab = tab();\n        } else if (typeof tab == 'object' && tab.length > 0) {\n          nextTab = tab;\n        }\n\n        return nextTab;\n      }\n    },\n    setNextTab: function(start, end) {\n      // Push new selection into nextTab collections\n      if (typeof start == 'string') {\n        var that = this;\n        this.$nextTab.push(function() {\n          return that.findSelection(start);\n        });\n      } else if (typeof start == 'number' && typeof end == 'number') {\n        var oldSelection = this.getSelection();\n\n        this.setSelection(start, end);\n        this.$nextTab.push(this.getSelection());\n\n        this.setSelection(oldSelection.start, oldSelection.end);\n      }\n\n      return;\n    },\n    __parseButtonNameParam: function(names) {\n      return typeof names == 'string' ?\n        names.split(' ') :\n        names;\n\n    },\n    enableButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.removeAttr('disabled');\n        });\n      });\n\n      return this;\n    },\n    disableButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.attr('disabled', 'disabled');\n        });\n      });\n\n      return this;\n    },\n    hideButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.addClass('hidden');\n        });\n      });\n\n      return this;\n    },\n    showButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.removeClass('hidden');\n        });\n      });\n\n      return this;\n    },\n    eventSupported: function(eventName) {\n      var isSupported = eventName in this.$element;\n      if (!isSupported) {\n        this.$element.setAttribute(eventName, 'return;');\n        isSupported = typeof this.$element[eventName] === 'function';\n      }\n      return isSupported;\n    },\n    keyup: function(e) {\n      var blocked = false;\n      switch (e.keyCode) {\n        case 40: // down arrow\n        case 38: // up arrow\n        case 16: // shift\n        case 17: // ctrl\n        case 18: // alt\n          break;\n\n        case 9: // tab\n          var nextTab;\n          if (nextTab = this.getNextTab(), nextTab !== null) {\n            // Get the nextTab if exists\n            var that = this;\n            setTimeout(function() {\n              that.setSelection(nextTab.start, nextTab.end);\n            }, 500);\n\n            blocked = true;\n          } else {\n            // The next tab memory contains nothing...\n            // check the cursor position to determine tab action\n            var cursor = this.getSelection();\n\n            if (cursor.start == cursor.end && cursor.end == this.getContent().length) {\n              // The cursor already reach the end of the content\n              blocked = false;\n            } else {\n              // Put the cursor to the end\n              this.setSelection(this.getContent().length, this.getContent().length);\n\n              blocked = true;\n            }\n          }\n\n          break;\n\n        case 13: // enter\n          blocked = false;\n          break;\n        case 27: // escape\n          if (this.$isFullscreen) this.setFullscreen(false);\n          blocked = false;\n          break;\n\n        default:\n          blocked = false;\n      }\n\n      if (blocked) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      this.$options.onChange(this);\n    },\n    change: function(e) {\n      this.$options.onChange(this);\n      return this;\n    },\n    select: function(e) {\n      this.$options.onSelect(this);\n      return this;\n    },\n    focus: function(e) {\n      var options = this.$options,\n        isHideable = options.hideable,\n        editor = this.$editor;\n\n      editor.addClass('active');\n\n      // Blur other markdown(s)\n      $(document).find('.md-editor').each(function() {\n        if ($(this).attr('id') !== editor.attr('id')) {\n          var attachedMarkdown;\n\n          if (attachedMarkdown = $(this).find('textarea').data('markdown'),\n            attachedMarkdown === null) {\n            attachedMarkdown = $(this).find('div[data-provider=\"markdown-preview\"]').data('markdown');\n          }\n\n          if (attachedMarkdown) {\n            attachedMarkdown.blur();\n          }\n        }\n      });\n\n      // Trigger the onFocus hook\n      options.onFocus(this);\n\n      return this;\n    },\n    blur: function(e) {\n      var options = this.$options,\n        isHideable = options.hideable,\n        editor = this.$editor,\n        editable = this.$editable;\n\n      if (editor.hasClass('active') || this.$element.parent().length === 0) {\n        editor.removeClass('active');\n\n        if (isHideable) {\n          // Check for editable elements\n          if (editable.el !== null) {\n            // Build the original element\n            var oldElement = $('<' + editable.type + '/>'),\n              content = this.getContent(),\n              currentContent = this.parseContent(content);\n\n            $(editable.attrKeys).each(function(k, v) {\n              oldElement.attr(editable.attrKeys[k], editable.attrValues[k]);\n            });\n\n            // Get the editor content\n            oldElement.html(currentContent);\n\n            editor.replaceWith(oldElement);\n          } else {\n            editor.hide();\n          }\n        }\n\n        // Trigger the onBlur hook\n        options.onBlur(this);\n      }\n\n      return this;\n    }\n\n  };\n\n  /* MARKDOWN PLUGIN DEFINITION\n   * ========================== */\n\n  var old = $.fn.markdown;\n\n  $.fn.markdown = function(option) {\n    return this.each(function() {\n      var $this = $(this),\n        data = $this.data('markdown'),\n        options = typeof option == 'object' && option;\n      if (!data)\n        $this.data('markdown', (data = new Markdown(this, options)));\n    });\n  };\n\n  $.fn.markdown.messages = {};\n\n  $.fn.markdown.defaults = {\n    /* Editor Properties */\n    autofocus: false,\n    hideable: false,\n    savable: false,\n    width: 'inherit',\n    height: 'inherit',\n    resize: 'none',\n    iconlibrary: 'glyph',\n    language: 'en',\n    initialstate: 'editor',\n    parser: null,\n    dropZoneOptions: null,\n    enableDropDataUri: false,\n\n    /* Buttons Properties */\n    buttons: [\n      [{\n        name: 'groupFont',\n        data: [{\n          name: 'cmdBold',\n          hotkey: 'Ctrl+B',\n          title: 'Bold',\n          icon: {\n            glyph: 'glyphicon glyphicon-bold',\n            fa: 'fa fa-bold',\n            'fa-3': 'icon-bold',\n            octicons: 'octicon octicon-bold'\n          },\n          callback: function(e) {\n            // Give/remove ** surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('strong text');\n            } else {\n              chunk = selected.text;\n            }\n\n            // transform selection and set the cursor into chunked text\n            if (content.substr(selected.start - 2, 2) === '**' &&\n              content.substr(selected.end, 2) === '**') {\n              e.setSelection(selected.start - 2, selected.end + 2);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 2;\n            } else {\n              e.replaceSelection('**' + chunk + '**');\n              cursor = selected.start + 2;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdItalic',\n          title: 'Italic',\n          hotkey: 'Ctrl+I',\n          icon: {\n            glyph: 'glyphicon glyphicon-italic',\n            fa: 'fa fa-italic',\n            'fa-3': 'icon-italic',\n            octicons: 'octicon octicon-italic'\n          },\n          callback: function(e) {\n            // Give/remove * surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('emphasized text');\n            } else {\n              chunk = selected.text;\n            }\n\n            // transform selection and set the cursor into chunked text\n            if (content.substr(selected.start - 1, 1) === '_' &&\n              content.substr(selected.end, 1) === '_') {\n              e.setSelection(selected.start - 1, selected.end + 1);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 1;\n            } else {\n              e.replaceSelection('_' + chunk + '_');\n              cursor = selected.start + 1;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdHeading',\n          title: 'Heading',\n          hotkey: 'Ctrl+H',\n          icon: {\n            glyph: 'glyphicon glyphicon-header',\n            fa: 'fa fa-header',\n            'fa-3': 'icon-font',\n            octicons: 'octicon octicon-text-size'\n          },\n          callback: function(e) {\n            // Append/remove ### surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent(),\n              pointer, prevChar;\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('heading text');\n            } else {\n              chunk = selected.text + '\\n';\n            }\n\n            // transform selection and set the cursor into chunked text\n            if ((pointer = 4, content.substr(selected.start - pointer, pointer) === '### ') ||\n              (pointer = 3, content.substr(selected.start - pointer, pointer) === '###')) {\n              e.setSelection(selected.start - pointer, selected.end);\n              e.replaceSelection(chunk);\n              cursor = selected.start - pointer;\n            } else if (selected.start > 0 && (prevChar = content.substr(selected.start - 1, 1), !!prevChar && prevChar != '\\n')) {\n              e.replaceSelection('\\n\\n### ' + chunk);\n              cursor = selected.start + 6;\n            } else {\n              // Empty string before element\n              e.replaceSelection('### ' + chunk);\n              cursor = selected.start + 4;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }]\n      }, {\n        name: 'groupLink',\n        data: [{\n          name: 'cmdUrl',\n          title: 'URL/Link',\n          hotkey: 'Ctrl+L',\n          icon: {\n            glyph: 'glyphicon glyphicon-link',\n            fa: 'fa fa-link',\n            'fa-3': 'icon-link',\n            octicons: 'octicon octicon-link'\n          },\n          callback: function(e) {\n            // Give [] surround the selection and prepend the link\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent(),\n              link;\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('enter link description here');\n            } else {\n              chunk = selected.text;\n            }\n\n            link = prompt(e.__localize('Insert Hyperlink'), 'http://');\n\n            var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\n              var sanitizedLink = $('<div>' + link + '</div>').text();\n\n              // transform selection and set the cursor into chunked text\n              e.replaceSelection('[' + chunk + '](' + sanitizedLink + ')');\n              cursor = selected.start + 1;\n\n              // Set the cursor\n              e.setSelection(cursor, cursor + chunk.length);\n            }\n          }\n        }, {\n          name: 'cmdImage',\n          title: 'Image',\n          hotkey: 'Ctrl+G',\n          icon: {\n            glyph: 'glyphicon glyphicon-picture',\n            fa: 'fa fa-picture-o',\n            'fa-3': 'icon-picture',\n            octicons: 'octicon octicon-file-media'\n          },\n          callback: function(e) {\n            // Give ![] surround the selection and prepend the image link\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent(),\n              link;\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('enter image description here');\n            } else {\n              chunk = selected.text;\n            }\n\n            link = prompt(e.__localize('Insert Image Hyperlink'), 'http://');\n\n            var urlRegex = new RegExp('^((http|https)://|(//))[a-z0-9]', 'i');\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\n              var sanitizedLink = $('<div>' + link + '</div>').text();\n\n              // transform selection and set the cursor into chunked text\n              e.replaceSelection('![' + chunk + '](' + sanitizedLink + ' \"' + e.__localize('enter image title here') + '\")');\n              cursor = selected.start + 2;\n\n              // Set the next tab\n              e.setNextTab(e.__localize('enter image title here'));\n\n              // Set the cursor\n              e.setSelection(cursor, cursor + chunk.length);\n            }\n          }\n        }]\n      }, {\n        name: 'groupMisc',\n        data: [{\n          name: 'cmdList',\n          hotkey: 'Ctrl+U',\n          title: 'Unordered List',\n          icon: {\n            glyph: 'glyphicon glyphicon-list',\n            fa: 'fa fa-list',\n            'fa-3': 'icon-list-ul',\n            octicons: 'octicon octicon-list-unordered'\n          },\n          callback: function(e) {\n            // Prepend/Give - surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            // transform selection and set the cursor into chunked text\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('list text here');\n\n              e.replaceSelection('- ' + chunk);\n              // Set the cursor\n              cursor = selected.start + 2;\n            } else {\n              if (selected.text.indexOf('\\n') < 0) {\n                chunk = selected.text;\n\n                e.replaceSelection('- ' + chunk);\n\n                // Set the cursor\n                cursor = selected.start + 2;\n              } else {\n                var list = [];\n\n                list = selected.text.split('\\n');\n                chunk = list[0];\n\n                $.each(list, function(k, v) {\n                  list[k] = '- ' + v;\n                });\n\n                e.replaceSelection('\\n\\n' + list.join('\\n'));\n\n                // Set the cursor\n                cursor = selected.start + 4;\n              }\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdListO',\n          hotkey: 'Ctrl+O',\n          title: 'Ordered List',\n          icon: {\n            glyph: 'glyphicon glyphicon-th-list',\n            fa: 'fa fa-list-ol',\n            'fa-3': 'icon-list-ol',\n            octicons: 'octicon octicon-list-ordered'\n          },\n          callback: function(e) {\n\n            // Prepend/Give - surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            // transform selection and set the cursor into chunked text\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('list text here');\n              e.replaceSelection('1. ' + chunk);\n              // Set the cursor\n              cursor = selected.start + 3;\n            } else {\n              if (selected.text.indexOf('\\n') < 0) {\n                chunk = selected.text;\n\n                e.replaceSelection('1. ' + chunk);\n\n                // Set the cursor\n                cursor = selected.start + 3;\n              } else {\n                var list = [];\n\n                list = selected.text.split('\\n');\n                chunk = list[0];\n\n                $.each(list, function(k, v) {\n                  list[k] = '1. ' + v;\n                });\n\n                e.replaceSelection('\\n\\n' + list.join('\\n'));\n\n                // Set the cursor\n                cursor = selected.start + 5;\n              }\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdCode',\n          hotkey: 'Ctrl+K',\n          title: 'Code',\n          icon: {\n            glyph: 'glyphicon glyphicon-console',\n            fa: 'fa fa-code',\n            'fa-3': 'icon-code',\n            octicons: 'octicon octicon-code'\n          },\n          callback: function(e) {\n            // Give/remove ** surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('code text here');\n            } else {\n              chunk = selected.text;\n            }\n\n            // transform selection and set the cursor into chunked text\n            if (content.substr(selected.start - 4, 4) === '```\\n' &&\n              content.substr(selected.end, 4) === '\\n```') {\n              e.setSelection(selected.start - 4, selected.end + 4);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 4;\n            } else if (content.substr(selected.start - 1, 1) === '`' &&\n              content.substr(selected.end, 1) === '`') {\n              e.setSelection(selected.start - 1, selected.end + 1);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 1;\n            } else if (content.indexOf('\\n') > -1) {\n              e.replaceSelection('```\\n' + chunk + '\\n```');\n              cursor = selected.start + 4;\n            } else {\n              e.replaceSelection('`' + chunk + '`');\n              cursor = selected.start + 1;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdQuote',\n          hotkey: 'Ctrl+Q',\n          title: 'Quote',\n          icon: {\n            glyph: 'glyphicon glyphicon-comment',\n            fa: 'fa fa-quote-left',\n            'fa-3': 'icon-quote-left',\n            octicons: 'octicon octicon-quote'\n          },\n          callback: function(e) {\n            // Prepend/Give - surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            // transform selection and set the cursor into chunked text\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('quote here');\n\n              e.replaceSelection('> ' + chunk);\n\n              // Set the cursor\n              cursor = selected.start + 2;\n            } else {\n              if (selected.text.indexOf('\\n') < 0) {\n                chunk = selected.text;\n\n                e.replaceSelection('> ' + chunk);\n\n                // Set the cursor\n                cursor = selected.start + 2;\n              } else {\n                var list = [];\n\n                list = selected.text.split('\\n');\n                chunk = list[0];\n\n                $.each(list, function(k, v) {\n                  list[k] = '> ' + v;\n                });\n\n                e.replaceSelection('\\n\\n' + list.join('\\n'));\n\n                // Set the cursor\n                cursor = selected.start + 4;\n              }\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }]\n      }, {\n        name: 'groupUtil',\n        data: [{\n          name: 'cmdPreview',\n          toggle: true,\n          hotkey: 'Ctrl+P',\n          title: 'Preview',\n          btnText: 'Preview',\n          btnClass: 'btn btn-primary btn-sm',\n          icon: {\n            glyph: 'glyphicon glyphicon-search',\n            fa: 'fa fa-search',\n            'fa-3': 'icon-search',\n            octicons: 'octicon octicon-search'\n          },\n          callback: function(e) {\n            // Check the preview mode and toggle based on this flag\n            var isPreview = e.$isPreview,\n              content;\n\n            if (isPreview === false) {\n              // Give flag that tell the editor enter preview mode\n              e.showPreview();\n            } else {\n              e.hidePreview();\n            }\n          }\n        }]\n      }]\n    ],\n    additionalButtons: [], // Place to hook more buttons by code\n    reorderButtonGroups: [],\n    hiddenButtons: [], // Default hidden buttons\n    disabledButtons: [], // Default disabled buttons\n    footer: '',\n    fullscreen: {\n      enable: true,\n      icons: {\n        fullscreenOn: {\n          fa: 'fa fa-expand',\n          glyph: 'glyphicon glyphicon-fullscreen',\n          'fa-3': 'icon-resize-full',\n          octicons: 'octicon octicon-link-external'\n        },\n        fullscreenOff: {\n          fa: 'fa fa-compress',\n          glyph: 'glyphicon glyphicon-fullscreen',\n          'fa-3': 'icon-resize-small',\n          octicons: 'octicon octicon-browser'\n        }\n      }\n    },\n\n    /* Events hook */\n    onShow: function(e) {},\n    onPreview: function(e) {},\n    onSave: function(e) {},\n    onBlur: function(e) {},\n    onFocus: function(e) {},\n    onChange: function(e) {},\n    onFullscreen: function(e) {},\n    onFullscreenExit: function(e) {},\n    onSelect: function(e) {}\n  };\n\n  $.fn.markdown.Constructor = Markdown;\n\n\n  /* MARKDOWN NO CONFLICT\n   * ==================== */\n\n  $.fn.markdown.noConflict = function() {\n    $.fn.markdown = old;\n    return this;\n  };\n\n  /* MARKDOWN GLOBAL FUNCTION & DATA-API\n   * ==================================== */\n  var initMarkdown = function(el) {\n    var $this = el;\n\n    if ($this.data('markdown')) {\n      $this.data('markdown').showEditor();\n      return;\n    }\n\n    $this.markdown();\n  };\n\n  var blurNonFocused = function(e) {\n    var $activeElement = $(document.activeElement);\n\n    // Blur event\n    $(document).find('.md-editor').each(function() {\n      var $this = $(this),\n        focused = $activeElement.closest('.md-editor')[0] === this,\n        attachedMarkdown = $this.find('textarea').data('markdown') ||\n        $this.find('div[data-provider=\"markdown-preview\"]').data('markdown');\n\n      if (attachedMarkdown && !focused) {\n        attachedMarkdown.blur();\n      }\n    });\n  };\n\n  $(document)\n    .on('click.markdown.data-api', '[data-provide=\"markdown-editable\"]', function(e) {\n      initMarkdown($(this));\n      e.preventDefault();\n    })\n    .on('click focusin', function(e) {\n      blurNonFocused(e);\n    })\n    .ready(function() {\n      $('textarea[data-provide=\"markdown\"]').each(function() {\n        initMarkdown($(this));\n      });\n    });\n\n}));\n","$(document).ready(function () {\r\n    var navbar = $('#navbar');\r\n    var menu = $('#menu-xs');\r\n\r\n    var lastScrollTop = 0;\r\n    $(document).on( 'scroll', function(){\r\n        var currentScrollTop = $(document).scrollTop();\r\n\r\n        var isScrollTop = (currentScrollTop - lastScrollTop) < 0;\r\n\r\n        if(isScrollTop) {\r\n            navbar.show();\r\n        } else {\r\n            if (currentScrollTop > 100) {\r\n                navbar.fadeOut();\r\n            } else {\r\n                navbar.show();\r\n            }\r\n        }\r\n        lastScrollTop = currentScrollTop;\r\n    });\r\n\r\n\r\n    //\r\n    //$toggle = $('#navbar-toggle');\r\n    //$toggle.click(function() {\r\n    //    $isOpen = $(this).attr('aria-expanded');\r\n    //\r\n    //    if($isOpen) {\r\n    //        menu.css('background-color', '#ffd346');\r\n    //        navbar.css('background-color', '#ffd346');\r\n    //    } else {\r\n    //        menu.css('background-color', 'transparent');\r\n    //\r\n    //        var currentScrollTop = $(document).scrollTop();\r\n    //        console.log(currentScrollTop);\r\n    //        if( currentScrollTop <= 100 ) {\r\n    //            navbar.css('background-color', 'transparent');\r\n    //        }\r\n    //    }\r\n    //});\r\n\r\n    var sky = $('.sky');\r\n    var skyHeight = $(document).height();\r\n    sky.css('height', skyHeight - 150);\r\n\r\n    toastr.options = {\r\n        \"positionClass\": \"toast-top-center\"\r\n    };\r\n\r\n    //$('.md-header').hide();\r\n});\r\n\r\nfunction search() {\r\n    var searchForm = $('#searchForm');\r\n    searchForm.submit();\r\n}\r\n\r\n\r\n"],"sourceRoot":"/source/"}